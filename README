Introduction
--------------------------------------------------------------------------
jdupes is a program for identifying and taking actions upon duplicate
files. This fork known as 'jdupes' is heavily modified from and improved
over the original. See CHANGES for details.


Why use jdupes instead of the original fdupes or other forks?
--------------------------------------------------------------------------
The biggest reason is also the most important one: raw speed. In testing on
various data sets, jdupes is *over 7 times faster* than fdupes-1.51 on
average.

It's also quite stable. All releases of jdupes are compared against a
known working reference version of fdupes or jdupes to be certain that
output does not change. You get the benefits of an aggressive development
process without putting your data at increased risk.

jdupes includes features that are not found in fdupes. Examples of
such features include btrfs block-level deduplication and control over
which file is kept when a match set is automatically deleted.

The downside is that jdupes development is never guaranteed to be bug-free!
If the program eats your dog or sets fire to your lawn, the authors cannot
be held responsible. If you notice a bug, please report it!

While jdupes maintains some degree of compatibility with fdupes from which
it was originally derived, there is no guarantee that it will continue to
maintain such compatibility in the future.


What jdupes is not: a similar (but not identical) file finding tool
--------------------------------------------------------------------------
Please note that jdupes ONLY works on 100% exact matches. It does not have
any sort of "similarity" matching, nor does it know anything about any
specific file formats such as images or sounds. Something as simple as a
change in embedded metadata such as the ID3 tags in an MP3 file or the EXIF
information in a JPEG image will not change the sound or image presented to
the user when opened, but technically it makes the file no longer identical
to the original.


Usage
--------------------------------------------------------------------------
Usage: jdupes [options] DIRECTORY...

 -r --recurse          for every directory given follow subdirectories
                       encountered within
 -R --recurse:         for each directory given after this option follow
                       subdirectories encountered within (note the ':' at
                       the end of the option, manpage for more details)
 -s --symlinks         follow symlinks
 -H --hardlinks        normally, when two or more files point to the same
                       disk area they are treated as non-duplicates; this
                       option will change this behavior
 -L --linkhard         hardlink duplicate files to the first file in
                       each set of duplicates without prompting the user
 -n --noempty          exclude zero-length files from consideration
 -x --xsize=SIZE       exclude files of size < SIZE from consideration; the
                       SIZE argument accepts 'k', 'M' and 'G' unit suffix
 -A --nohidden         exclude hidden files from consideration
 -f --omitfirst        omit the first file in each set of matches
 -1 --sameline         list each set of matches on a single line
 -S --size             show size of duplicate files
 -m --summarize        summarize dupe information
 -q --quiet            hide progress indicator
 -d --delete           prompt user for files to preserve and delete all
                       others; important: under particular circumstances,
                       data may be lost when using this option together
                       with -s or --symlinks, or when specifying a
                       particular directory more than once; refer to the
                       jdupes documentation for additional information
 -N --noprompt         together with --delete, preserve the first file in
                       each set of duplicates and delete the rest without
                       prompting the user
 -p --permissions      don't consider files with different owner/group or
                       permission bits as duplicates
 -o --order=BY         select sort order for output, linking and deleting; by
                       mtime (BY=time) or filename (BY=name, the default)
 -O --paramorder       Parameter order is more important than selected -O sort
 -B --dedupe           Send matches to btrfs for block-level deduplication
 -v --version          display version, feature, and license information
 -h --help             display this help message

Unless -1 or --sameline is specified, duplicate files are listed
together in groups, each file displayed on a separate line. The
groups are then separated from each other by blank lines.

When -1 or --sameline is specified, spaces and backslash characters (\)
appearing in a filename are preceded by a backslash character. For
instance, "with spaces" becomes "with\ spaces".

When using -d or --delete, care should be taken to insure against
accidental data loss. While no information will be immediately
lost, using this option together with -s or --symlink can lead
to confusing information being presented to the user when prompted
for files to preserve. Specifically, a user could accidentally
preserve a symlink while deleting the file it points to. A similar
problem arises when specifying a particular directory more than
once. All files within that directory will be listed as their own
duplicates, leading to data loss should a user preserve a file
without its "duplicate" (the file itself!).


Hard linking status symbols and behavior
--------------------------------------------------------------------------
A set of arrows are used in hard linking to show what action was taken on
each link candidate. These arrows are as follows:

----> File was hard linked to the first file in the duplicate chain
-==-> Already a hard link to the first file in the chain
-//-> Hard linking failed due to an error during the linking process

If your data set has hard linked files and you do not use -L to always
consider them as duplicates, you may still see hard linked files appear
together in match sets. This is caused by a separate file that matches
the hard linked files and is the correct behavior.

Microsoft Windows platform-specific notes
--------------------------------------------------------------------------
The Windows port does not support Unicode, only ANSI file names. This is
because Unicode support on Windows is difficult to add to existing code
without making it very messy or breaking things. Support is eventually
planned for Unicode on Windows.

Windows has a hard limit of 1024 hard links per file. There is no way to
change this. The documentation for CreateHardLink() states: "The maximum
number of hard links that can be created with this function is 1023 per
file. If more than 1023 links are created for a file, an error results."
(The number is actually 1024, but they're ignoring the first file.)


Contact Information
--------------------------------------------------------------------------
For all jdupes inquiries, contact Jody Bruchon <jody@jodybruchon.com>
Please do NOT contact Adrian Lopez about issues with jdupes!


Legal Information
--------------------------------------------------------------------------
jdupes is Copyright (C) 2015-2016 by Jody Bruchon
Derived from the original 'fdupes' (C) 1999-2016 by Adrian Lopez
Includes jody_hash (C) 2015-2016 Jody Bruchon <jody@jodybruchon.com>

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation files
(the "Software"), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of the Software,
and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
